snippet rfc "Description" b
import React from "react";

export function `!p snip.rv=snip.fn.replace('.tsx','')`() {
  return <>$0</>;
}
endsnippet

snippet blah "Description" b
`!p
snip.rv = 'import React from "react"\n'
snip.rv += f"export function {snip.fn.replace('.tsx', '')}()"
snip.rv += "{\n"
snip.rv += "return <></>;\n"
snip.rv += "}"
`
endsnippet

snippet formik "Description" b
import { Formik, Form, Field } from "formik";
import * as yup from "yup";
const schema = yup.object({
  title: yup.string().required().min(5)
});


<Formik
validationSchema={schema}
initialValues={{ company_name: "", company_code: "" }}
onSubmit={handleSubmit}
>
{() => (
  <Form>
    <div>
      <Field
        label="Manufacturer Name"
        name="company_name"
        component={TextFormField}
      />
    </div>
    <div>
      <Field
        label="Manufacturer Code"
        name="company_code"
        component={TextFormField}
      />
    </div>
    <div>
      <Button type="submit" variant="contained" color="primary" type="submit">
        Submit
      </Button>
    </div>
  </Form>
)}
</Formik>
endsnippet


snippet then "Description" b
then(($1) => {})
endsnippet


snippet jst "Description" b
<pre>{JSON.stringify(${1}, null, 2)}</pre>
endsnippet

snippet useAppS "Description" A
useAppSelector((state) => state.${1})
endsnippet

snippet ()= "Description" A
() => {}
endsnippet

snippet mkst "Description" b
import { makeStyles } from "@material-ui/core/styles";
const useStyles = makeStyles((theme) => ({
  box: {
  }
}));
const classes = useStyles();
endsnippet


snippet env
\begin{${1:enumerate}}
    $0
\end{$1}
endsnippet

snippet usest "Description" b
const [${1},set`!p snip.rv = t[1][0:1].upper() + t[1][1:]`] = useState($2);
endsnippet

snippet tt "Textfield" b
import { TextField } from "@material-ui/core";
endsnippet
